import UIKit

// Задача 1 и 2
// ----------------
// ВАЖНО!! Типы UInt8, UInt16, UInt32, UInt64, Float32, Float64 использованы в учебных целя.
// В реальных условиях с большой вероятностью вместо UInt8, UInt16, UInt32, UInt64 будет использовани Int
// а вместо Float32, Float64 будет использоваться тип Float
// ----------------

/*
 Возраст человека;
   Предполагаем, что возраст человека может быть:
    а) в годах -   0..128 лет
    б) в месяцах - 0..1536 мес
    в) в днях -    0..46756 дн
   Какой тип данных лучше подойдет: Int и производные
   Какие операции в последующем будут совершаться: Сложение, Вычитание, Сравение (>,<,==)
   С какими другими типами данных будет взаимодействие: Int и производные типы; Float,Dounle (например коефициенты)
 */
var ageManInYears: UInt8
var ageManInMonts: UInt16
var ageManInDays: UInt16
ageManInYears = 128
ageManInMonts = 1536
ageManInDays = 46756

/*
 Население города;
   Предполагем что не больше 100 млн чел
   Какой тип данных лучше подойдет: Int и производные
   Какие операции в последующем будут совершаться: Сложение, Вычитание, Сравение (>,<,==), умножение, деление
   С какими другими типами данных будет взаимодействие: Int и производные типы; Float,Dounle (например коефициенты)
 */
var cityPoulation: UInt32
cityPoulation = 99_999_999

/*
 Число звезд в галактике;
   Возможно тут подходит число до 999 млрд шт
   Какой тип данных лучше подойдет: Int и производные
   Какие операции в последующем будут совершаться: Сложение, Вычитание, Сравение (>,<,==), умножение, деление
   С какими другими типами данных будет взаимодействие: Int и производные типы; Float,Dounle (например коефициенты)
 */
var countStarInGalaxy: UInt64
countStarInGalaxy = 999_888_777_666

/*
 Один байт ОЗУ; 0..255
 Какой тип данных лучше подойдет: Int и производные
 Какие операции в последующем будут совершаться: Сложение, Вычитание, Сравение (>,<,==), умножение, деление
 С какими другими типами данных будет взаимодействие: Int и производные типы
 */
var byteValue: UInt8
byteValue = 220


/*
 Средняя зарплата за год;
   Пусть будет диапазон 0..999_999_999.99
   Какой тип данных лучше подойдет: Float
   Какие операции в последующем будут совершаться: Сложение, Вычитание, Сравение (>,<,==), умножение, деление
   С какими другими типами данных будет взаимодействие: Int и производные типы; Float,Dounle (например коефициенты)
 */
var myDreamSalary: Float
myDreamSalary = 239464.76

/*
 Цвет фигуры;
   Принимаем глубину цвета фигуры 32 бита
   Какой тип данных лучше подойдет: Float
   Какие операции в последующем будут совершаться: Сложение, Вычитание, Сравение (>,<,==), умножение, деление
   С какими другими типами данных будет взаимодействие: Int и производные типы
 */
var colourFigure: UInt32
colourFigure=232343

/*
 Длина в мм;
   Вариант 1 - знание миллиметрах без дробной части (разумный диапазон 10м=100000мм)
   Вариант 2 - значение в миллиметра с дробной часть (разумный диапазон 10м=100000мм, точность 2 знака)
   Какой тип данных лучше подойдет: Float
   Какие операции в последующем будут совершаться: Сложение, Вычитание, Сравение (>,<,==), умножение, деление
   С какими другими типами данных будет взаимодействие: Int и производные типы; Float,Dounle (например коефициенты)
 */
var lengthSideMM1: UInt32
var lengthSideMM2: Float32
lengthSideMM1 = 100000
lengthSideMM2 = 100000.99

/*
 Длина в см;
 Вариант 1 - знание в cм без дробной части (разумный диапазон 100м=100000см)
 Вариант 2 - значение в см с дробной часть (разумный диапазон 100м=100000см, точность 4 знака)
 Какой тип данных лучше подойдет: Float
 Какие операции в последующем будут совершаться: Сложение, Вычитание, Сравение (>,<,==), умножение, деление
 С какими другими типами данных будет взаимодействие: Int и производные типы; Float,Dounle (например коефициенты)
*/
var lengthSideCM1: UInt32
var lengthSideCM2: Float64
lengthSideCM1 = 100000
lengthSideCM2 = 100000.9999

/*
 Фамилия человека;
 Какой тип данных лучше подойдет: String
 Какие операции в последующем будут совершаться: Конкатенация, Сравение (>,<,==)
 С какими другими типами данных будет взаимодействие: String
 */
let surnameMan: String
surnameMan = "Иванов"

/*
 Время года;
   Тип с конечным числом значений
   Какой тип данных лучше подойдет: enum
   Какие операции в последующем будут совершаться: Сравение (==)
   С какими другими типами данных будет взаимодействие: Сравнение с тем же самым типом
 */
enum SeasonDiscountType {
    case winter, spring, summer, autumn
}
var seasonDiscountLigth: SeasonDiscountType
seasonDiscountLigth = .spring

/*
 Пол человека.
 Тип с конечным числом значений
 Какой тип данных лучше подойдет: enum
 Какие операции в последующем будут совершаться: Сравение (==)
 С какими другими типами данных будет взаимодействие: Сравнение с тем же самым типом
 */
enum SexCustomerType {
    case male, female
}
let sexHeppyCustomer: SexCustomerType
sexHeppyCustomer = .female

//----------------------
print("\nЗадача 2 ----------------------")
print("ageManInYears=\(ageManInYears)")
print("ageManInMonts=\(ageManInMonts)")
print("ageManInDays=\(ageManInDays)")
print("cityPoulation=\(cityPoulation)")
print("countStarInGalaxy=\(countStarInGalaxy)")
print("byteValue=\(byteValue)")
print("myDreamSalary=\(myDreamSalary)")
print("colourFigure=\(colourFigure)")
print("lengthSideMM1=\(lengthSideMM1)")
print("lengthSideMM2=\(lengthSideMM2)")
print("lengthSideCM1=\(lengthSideCM1)")
print("lengthSideCM2=\(lengthSideCM2)")
print("surnameMan=\(surnameMan)")
print("seasonDiscountLigth=\(seasonDiscountLigth)")
print("sexHeppyCustomer=\(sexHeppyCustomer)")

// Задача 3
// ----------------

var   employeeSalary1: Float
var   employeeSalary2: Float
var   employeeSalary3: Float

employeeSalary1 = 55000.00
employeeSalary2 = 40000.00
employeeSalary3 = 70000.00

employeeSalary1 = employeeSalary1 * 2
employeeSalary2 = employeeSalary2 + 15000
employeeSalary3 = employeeSalary3 + 0

print("\nЗадача 3 ----------------------")
print("Новая зарплата: сотрудник 1 = \(employeeSalary1) \n")
print("Новая зарплата: сотрудник 2 = \(employeeSalary2) \n")
print("Новая зарплата: сотрудник 3 = \(employeeSalary3) \n")
